# Create the container image, download the Redis image, and start the application

docker-compose up -docker

# View the images

docker images

# View the running containers

docker ps

# Test application locally

http://127.0.0.1:8080

# Stop and remove container instances

docker-compose down

# Log into container registry

az acr login --name az303acr001.azurecr.io

# Query for login server address

az acr list --resource-group myResourceGroup --query "[].{acrLoginServer:loginServer}" --output table

# Tag the frond-end image
docker tag mcr.microsoft.com/azuredocs/azure-vote-front:v1 az303acr001.azurecr.io/azure-vote-front:v1

# Push image to registry

docker push az303acr001.azurecr.io/azure-vote-front:v1

# List images in registry
az acr repository list --name az303acr001.azurecr.io --output table

# Install kubectl
az aks install-cli

# Connect to the AKS cluster
az aks get-credentials --resource-group oreilly --name az303aks01

# View worker nodes
kubectl get nodes

# Deploy the application
kubectl apply -f azure-vote-all-in-one-redis.yaml

# Monitor progress
kubectl get service azure-vote-front --watch

